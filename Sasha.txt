# Sasha's work 


Boyer Moore pattern searching algorithm.

The algorithm is a combination, but can be independent, of Bad Character Heuristic and Good Suffix Heuristic approaches. Using these two methods, the algorithm skips as many characters as it can. 

In the Bad Character Heuristic, if the current character doesnt match the current character of the pattern, then the characters of the pattern will be shifted until there is a match or until the pattern moves past the mismatched character.

The time complexity of the algorithm is O(nm) and its auxilary space is O(1).

The Bad Character Heuristic may take O(nm) time in the worst case scenario which occurs when all characters of the text and pattern are the same.
ex: text = "SSSSSSSSSS" pattern = "SSS"

However, the BCH method may take O(m/n) time in the best case and this happens when all characters of the text and pattern are different.

On the other hand, just like the Bad Character Heuristic, the Good Suffix Heuristic method generates a table for good suffixes. This helps determine how much to shift a pattern when a mismatch occurs and when a partial match has been found. 

The runtime of this method is O(n) because it iterates thrugh every character of the text at least once.  
